# DSL version, should appear in the main blueprint.yaml
# and may appear in other imports. In such case, the versions must match
tosca_definitions_version: cloudify_dsl_1_3

imports:
    # importing cloudify related types, plugins, workflow, etc...
    # to speed things up, it is possible downloading this file,
    # including it in the blueprint directory and importing it
    # instead.
    - http://www.getcloudify.org/spec/cloudify/3.5m1/types.yaml
    - http://www.getcloudify.org/spec/fabric-plugin/1.4.1/plugin.yaml
    - http://www.getcloudify.org/spec/openstack-plugin/1.4/plugin.yaml
    # relative import of plugin.yaml that resides in the blueprint directory
    - test_plugin.yaml
    - my_types.yaml


inputs:
  keystone_username:
    default: ''
    type: string

  keystone_password:
    default: ''
    type: string

  keystone_tenant_name:
    default: ''
    type: string

  keystone_url:
    default: ''
    type: string

  region:
    default: ''
    type: string

  nova_url:
    default: ''
    type: string

  neutron_url:
    default: ''
    type: string

  external_network_name:
    type: string

  resources_prefix:
    default: ''
    type: string


dsl_definitions:
  openstack_configuration: &openstack_configuration
    username: { get_input: keystone_username }
    password: { get_input: keystone_password }
    tenant_name: { get_input: keystone_tenant_name }
    auth_url: { get_input: keystone_url }
    region: { get_input: region }
    nova_url: { get_input: nova_url }
    neutron_url: { get_input: neutron_url }
    resources_prefix: { get_input: resources_prefix }


node_templates:

  public_ip1:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }
      openstack_config: *openstack_configuration

  sg_ngnix_es_logstash:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      resource_id: example-security-group
      security_group:
        description: Security group for logging-plugin example component
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 80
        - remote_ip_prefix: 0.0.0.0/0
          port: 8000
        - remote_ip_prefix: 0.0.0.0/0
          port: 9200
        - remote_ip_prefix: 0.0.0.0/0
          port: 5044
      openstack_config: *openstack_configuration

  VM:
    type: cloudify.openstack.nodes.Server
    properties:
      resource_id: monitoring_ubuntu_server
      cloudify_agent:
        user: ubuntu
      server:
        image: 6c3047c6-17b1-4aaf-a657-9229bb481e50
        flavor: c4b193d2-f331-4250-9b15-bbfde97c462a
        userdata: |
          #!/bin/bash
          echo 127.0.1.1 $(cat /etc/hostname) | sudo tee -a sudo /etc/hosts >/dev/null
          echo "nameserver 8.8.8.8" | sudo tee -a sudo /etc/resolv.conf > /dev/null
          echo "nameserver 8.8.8.8" | sudo tee -a sudo /etc/resolvconf/resolv.conf.d/base > /dev/null
    relationships:
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: public_ip1
      - type: cloudify.openstack.server_connected_to_security_group
        target: sg_ngnix_es_logstash
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: filebeat.filebeat_plugin.tasks.install
          inputs:
            filebeats_install_path:
            download_url:
            filebeat_config_file:
            filebeat_config_inputs:
              paths:
                syslog:
                  - /var/log/syslog
                  - /var/log/auth.log
                nginx-access:
                  - /var/log/nginx/*.log
              outputs:
                logstash:
                  hosts:
                    - { concat: [get_attribute: [public_ip1, floating_ip_address], ':5044' ] }
                  bulk_max_size: 1024
                  index: filebeat
                elasticsearch:
                  hosts:
                    - { concat: [get_attribute: [public_ip1, floating_ip_address], ':9200' ] }
                  path: filebeat.template.json
              inputs:
                shipper:
                logging:
                  rotateeverybytes: 10485760
        start:
            implementation: filebeat.filebeat_plugin.tasks.start

  elasticsearch:
    type: my_types.nodes.ElasticsearchServer
    properties:
       port: 9200
       clusterName: hello-world
    relationships:
      - type: cloudify.relationships.contained_in
        target: VM

  logstash:
    type: my_types.nodes.logstashServer
    properties:
       port: 5044
    relationships:
      - type: cloudify.relationships.contained_in
        target: VM
      - type: cloudify.relationships.depends_on
        target: elasticsearch

  ngnix:
    type: my_types.nodes.NgnixNode
    relationships:
      - type: cloudify.relationships.contained_in
        target: VM
      - type: cloudify.relationships.depends_on
        target: logstash
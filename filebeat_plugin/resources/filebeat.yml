################### Filebeat Configuration Example #########################

############################# Filebeat ######################################
filebeat:
  # List of prospectors to fetch data.
  prospectors:
    -
      paths:
        - /var/log/syslog
        - /var/log/auth.log
      document_type: syslog
    -
      paths:
        - "/var/log/nginx/*.log"
      document_type: nginx-access


  # General filebeat configuration options
  #
  # Event count spool threshold - forces network flush if exceeded
  #spool_size: 1024

  # Defines how often the spooler is flushed. After idle_timeout the spooler is
  # Flush even though spool_size is not reached.
  #idle_timeout: 5s

  # Name of the registry file. Per default it is put in the current working
  # directory. In case the working directory is changed after when running
  # filebeat again, indexing starts from the beginning again.
  #registry_file: .filebeat

  # Full Path to directory with additional prospector configuration files. Each file must end with .yml
  # These config files must have the full filebeat config part inside, but only
  # the prospector part is processed. All global options like spool_size are ignored.
  # The config_dir MUST point to a different directory then where the main filebeat config file is in.
  #config_dir:



###############################################################################
############################# Libbeat Config ##################################
# Base config file used by all other beats for using libbeat features

############################# Output ##########################################
output:

{% for elem, dict in outputs.iteritems() %}
  {{ elem }}:
  {% for key, value in dict.iteritems() %}
  {% if value is sameas true %}
    {{ key }}: true
   {% elif value is sameas false %}
    {{ key }}: false
  {% elif value is string or value is number %}
    {{ key }}: "{{ value }}"
  {% else %}
    {{ key }}: ["{{ '", "'.join(value) }}"]
  {% endif %}
{% endfor %}
{% endfor %}

############################# Shipper #########################################

{% for elem, dict in inputs.iteritems() %}
  {{ elem }}:
  {% if not dict is none %}
  {% for key, value in dict.iteritems() %}
    {% if value is sameas true %}
      {{ key }}: true
    {% elif value is sameas false %}
      {{ key }}: false
    {% elif value is string or value is number %}
      {{ key }}: "{{ value }}"
    {% else %}
      {{ key }}: ["{{ '", "'.join(value) }}"]
    {% endif %}
  {% endfor %}
{% endif %}
{% endfor %}

